{"version":3,"sources":["components/Events/event.jpg","components/computer.jpg","components/Members/GithubOrg/cache.js","customIcons.js","components/Container/index.js","components/EventCard/index.js","components/Events/index.js","components/Feed/effects.js","components/Feed/index.js","components/Footer.js","components/Header.js","components/Welcome.js","components/Members/GithubOrg/index.js","components/Members/view/index.js","components/Members/index.js","components/TalkCard/index.js","components/Talks/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","KNOWN_MEMBERS","login","avatar_url","html_url","viewBox","path","fill","d","clock","Container","props","Box","m","maxWidth","px","py","EventCard","lat","lng","place","location","latitude","longitude","Flex","backgroundColor","borderRadius","direction","overflow","shadow","navigator","userAgent","Image","alt","name","src","width","flex","p","Link","href","id","Heading","as","color","fontWeight","fontFamily","lineHeight","size","alignItems","display","flexDirection","justifyContent","mb","mt","Text","city","Button","ml","opacity","variant","variantColor","Icon","mr","fontSize","textTransform","format","parseISO","start_time","locale","esLocale","Badge","end_time","Events","backgroundAttachment","backgroundImage","bgImage","backgroundRepeat","backgroundSize","Grid","gap","templateColumns","of","events","event","htmlToText","htmlSource","plain","DOMParser","parseFromString","body","textContent","replace","Feed","RSSUrl","useState","loading","setLoading","posts","setPosts","useEffect","requestUrl","encodeURIComponent","fetch","then","r","json","data","items","map","content","description","rest","contentPlain","descriptionPlain","usePosts","align","justify","post","Article","parsedDate","formatDistanceToNow","pubDate","bg","rounded","guid","title","split","slice","Footer","rel","target","Header","children","textAlign","Welcome","cache","require","GithubOrg","organizationName","publicMembers","API_ENDPOINT","organization","response","ok","publicRepos","sort","a","b","stargazers_count","this","MemberProfile","member","OrganizationMembers","wrap","members","OrgMembersDisplay","render","state","pending","error","orgName","setState","catch","console","React","Component","TalkCard","Talks","talks","talk","customTheme","theme","icons","customIcons","App","ThemeProvider","CSSReset","Boolean","window","hostname","match","rootElement","document","getElementById","hasChildNodes","ReactDOM","hydrate","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAOC,QAAU,IAA0B,mC,ipCCA3CD,EAAOC,QAAU,IAA0B,sC,64BCA3C,qDAIO,IAAMC,EAAgB,CAC3B,CACEC,MAAO,cACPC,WAAY,wDACZC,SAAU,kCAEZ,CACEF,MAAO,aACPC,WAAY,sDACZC,SAAU,iCAEZ,CACEF,MAAO,sBACPC,WAAY,uDACZC,SAAU,0CAEZ,CACEF,MAAO,UACPC,WAAY,uDACZC,SAAU,8BAEZ,CACEF,MAAO,aACPC,WAAY,uDACZC,SAAU,iCAEZ,CACEF,MAAO,cACPC,WAAY,wDACZC,SAAU,kCAEZ,CACEF,MAAO,aACPC,WAAY,sDACZC,SAAU,iCAEZ,CACEF,MAAO,YACPC,WAAY,sDACZC,SAAU,gCAEZ,CACEF,MAAO,WACPC,WAAY,uDACZC,SAAU,+BAEZ,CACEF,MAAO,eACPC,WAAY,sDACZC,SAAU,qC,oHCnDC,GACb,eAAgB,CACdC,QAAS,cACTC,KACE,0BACEC,KAAK,eACLC,EAAE,61BAIRC,MAAO,CACLJ,QAAS,cACTC,KACE,0BACEC,KAAK,eACLC,EAAE,0UAIR,iBAAkB,CAChBH,QAAS,cACTC,KACE,0BACEC,KAAK,eACLC,EAAE,yX,iDCvBK,SAASE,EAAUC,GAChC,OACE,kBAACC,EAAA,EAAD,eAAKC,EAAE,SAASC,SAAU,IAAKC,GAAI,CAAC,EAAG,EAAG,EAAG,GAAIC,GAAI,CAAC,EAAG,IAAQL,I,oFCctD,SAASM,EAAUN,GAAQ,IAJfO,EAAKC,EAKzBC,EAAST,EAATS,MACAC,EAAYD,EAAZC,SACAC,EAAuBD,EAAvBC,SAAUC,EAAaF,EAAbE,UAEf,OACE,kBAACC,EAAA,EAAD,CACEC,gBAAgB,QAChBC,aAAa,KACbC,UAAU,SACVC,SAAS,SACTC,OAAO,MAGmB,cAAxBC,UAAUC,WACR,kBAACC,EAAA,EAAD,CACEC,IAAKtB,EAAMuB,KACXC,KArBejB,EAqBQI,EArBHH,EAqBaI,EApBrC,yDAAN,OAAgEL,EAAhE,YAAuEC,EAAvE,oIAqBUiB,MAAM,SAGZ,kBAACZ,EAAA,EAAD,CAAMG,UAAU,SAASU,KAAM,EAAGC,EAAG,GACnC,kBAACC,EAAA,EAAD,CAAMC,KAAI,0CAAqC7B,EAAM8B,KACnD,kBAACC,EAAA,EAAD,CACEC,GAAG,KACHC,MAAM,WACNC,WAAW,OACXC,WAAW,UACXC,WAAW,UACXC,KAAK,MAEJrC,EAAMuB,OAGX,kBAACV,EAAA,EAAD,CACEyB,WAAW,SACXC,QAAQ,OACRC,cAAc,MACdC,eAAe,gBACfC,GAAI,EACJC,GAAI,GAEJ,kBAACC,EAAA,EAAD,CAAMX,MAAM,YACTxB,EAAMc,KADT,KACiBb,EAASmC,MAE1B,kBAACC,EAAA,EAAD,CACEd,GAAG,IACHH,KAAI,uCAAkClB,EAAlC,YAA8CC,EAA9C,QACJmC,GAAI,EACJC,QAAS,EACTX,KAAK,KACLY,QAAQ,QACRC,aAAa,QAEb,kBAACC,EAAA,EAAD,CAAM5B,KAAK,iBAAiB6B,GAAI,IATlC,SAaF,kBAACvC,EAAA,EAAD,CACEyB,WAAW,SACXC,QAAQ,OACRC,cAAc,MACdC,eAAe,gBACfE,GAAG,QAEH,kBAAC1C,EAAA,EAAD,KACE,kBAAC2C,EAAA,EAAD,CAAMS,SAAS,MAAf,SACA,kBAACT,EAAA,EAAD,CACES,SAAS,KACTnB,WAAW,OACXS,GAAI,EACJW,cAAc,cAEbC,YAAOC,YAASxD,EAAMyD,YAAa,YAAa,CAC/CC,OAAQC,QAId,kBAAC1D,EAAA,EAAD,KACE,kBAAC2C,EAAA,EAAD,CAAMS,SAAS,MAAf,QACA,kBAACO,EAAA,EAAD,CAAOX,QAAQ,SAASC,aAAa,SAClCK,YAAOC,YAASxD,EAAMyD,YAAa,WADtC,KACoD,IACjDF,YAAOC,YAASxD,EAAM6D,UAAW,gBC5FjC,SAASC,IACtB,OACE,kBAAC7D,EAAA,EAAD,CACE8D,qBAAqB,QACrBC,gBAAe,6EAAwEC,IAAxE,KACfC,iBAAiB,YACjBC,eAAe,SAEf,kBAACpE,EAAD,KACE,kBAACgC,EAAA,EAAD,CAASE,MAAM,QAAQI,KAAK,MAA5B,WAIA,kBAAC+B,EAAA,EAAD,CACEC,IAAK,EACL1B,GAAI,EACJ2B,gBAAgB,yCAEhB,kBAAC,MAAD,CAAKC,GAAIC,EAAQxC,GAAI,SAAAyC,GAAK,OAAI,kBAACnE,EAAcmE,S,4BCjBjDC,EAAa,SAAoBC,GACrC,IACIC,GADQ,IAAIC,WAAYC,gBAAgBH,EAAY,aACxCI,KAAKC,aAAe,GAIpC,OADAJ,EAAQA,EAAMK,QAAQ,oCAAqC,KCJ9C,SAASC,IAAQ,IAAD,EDcP,SAAkBC,GAAS,IAAD,EAClBC,oBAAS,GADS,mBACzCC,EADyC,KAChCC,EADgC,OAEtBF,mBAAS,IAFa,mBAEzCG,EAFyC,KAElCC,EAFkC,KA+BhD,OA3BAC,qBAAU,WACR,IAAMC,EAAU,UA5BM,uCA4BN,oBAAmCC,mBACjDR,IAGFS,MAAMF,GACHG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAG,GAKJ,IAAMT,EAAQS,EAAKC,MAAMC,KAAI,YAAsC,IAApCC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,YAAgBC,EAAU,yCAChE,OAAO,aACLC,aAAc5B,EAAWyB,GACzBI,iBAAkB7B,EAAW0B,GAC7BD,UACAC,eACGC,MAIPb,EAASD,GACTD,GAAW,QAEd,CAACH,IAEG,CAACE,EAASE,GC5CQiB,CAHG,gDAEC,mBACtBnB,EADsB,KACbE,EADa,KAG7B,OACE,kBAACxF,EAAD,KACE,kBAACc,EAAA,EAAD,CAAM4F,MAAM,WAAWC,QAAQ,iBAC7B,kBAAC3E,EAAA,EAAD,CAASG,WAAW,SAASG,KAAK,MAAlC,QAGA,kBAACO,EAAA,EAAD,CAAMZ,GAAG,IAAIH,KAAK,2CAAlB,4BAKDwD,EACC,kBAACzC,EAAA,EAAD,CAAMD,GAAI,GAAV,6BAEA,kBAAC,MAAD,CAAK4B,GAAIgB,EAAOvD,GAAI,SAAA2E,GAAI,OAAI,kBAACC,EAAD,CAASD,KAAMA,EAAMhE,GAAI,QAM7D,SAASiE,EAAT,GAAoC,IAAlBD,EAAiB,EAAjBA,KAAS3G,EAAQ,wBAC3B6G,EAAaC,YAAoBtD,YAASmD,EAAKI,SAAU,CAC7DrD,OAAQC,MAGV,OACE,kBAAC1D,EAAA,EAAD,iBAASD,EAAT,CAAgBgC,GAAG,UAAUgF,GAAG,QAAQC,QAAS,EAAGtF,EAAG,EAAGT,OAAO,OAC/D,kBAAC0B,EAAA,EAAD,CAAMZ,GAAG,IAAIH,KAAM8E,EAAKO,MACtB,kBAACnF,EAAA,EAAD,CAASC,GAAG,KAAKE,WAAW,SAASG,KAAK,MACvCsE,EAAKQ,QAGV,kBAACvE,EAAA,EAAD,CAAMZ,GAAG,OAAOC,MAAM,QACnB4E,GAEH,kBAACjE,EAAA,EAAD,CAAMX,MAAM,OAAOU,GAAI,GACpBgE,EAAKJ,iBAAiBa,MAAM,KAAKC,MAAM,EAAG,KCzBpCC,MAtBf,WACE,OACE,kBAACzG,EAAA,EAAD,CAAM4F,MAAM,SAASO,GAAG,UAAUN,QAAQ,gBAAgB/E,EAAG,GAC3D,kBAACiB,EAAA,EAAD,CAAMX,MAAM,WAAZ,wDAGA,uBACEJ,KAAK,gBACL0F,IAAI,sBACJC,OAAO,SACPL,MAAM,iCAEN,yBACE7F,IAAI,cACJE,IAAI,sCACJC,MAAM,WCfD,SAASgG,IACtB,OACE,kBAACxH,EAAA,EAAD,CAAK+G,GAAG,UAAU3G,GAAI,GACpB,kBAAC0B,EAAA,EAAD,CACEC,GAAG,KACHC,MAAM,WACNyF,SAAS,oCACTxF,WAAW,SACXyF,UAAU,Y,qBCNH,SAASC,IACtB,OACE,kBAAC/G,EAAA,EAAD,CACEkD,qBAAqB,QACrBC,gBAAe,6EAAwEC,IAAxE,KACfC,iBAAiB,YACjBC,eAAe,QACfuC,QAAQ,SACRtG,GAAI,EACJC,GAAI,CAAC,EAAG,IAER,kBAACJ,EAAA,EAAD,CAAKgC,MAAM,QAAQ9B,SAAU,IAAKwH,UAAU,UAC1C,kBAAC5F,EAAA,EAAD,CAASM,KAAK,MAAd,yBACA,kBAACO,EAAA,EAAD,CAAMR,WAAY,IAAKO,GAAI,GAA3B,yIAIA,kBAACC,EAAA,EAAD,CAAMR,WAAY,IAAKO,GAAI,GAA3B,8L,4CCtBFkF,EAAQC,EAAQ,IAKDC,EACnB,WAAYC,GAAmB,IAAD,gCAO9BC,cAAgB,WACd,IAAMC,EAAY,sCAChB,EAAKC,aADW,mBAKlB,OAFgBvC,MAAMsC,GAEPrC,MAAK,SAAAuC,GAClB,OAAIA,EAASC,GACJD,EAASrC,OAGX8B,EAAMvI,kBAlBa,KA0B9BgJ,YAAc,WACZ,IAAMJ,EAAY,sCAChB,EAAKC,aADW,UAKlB,OAFgBvC,MAAMsC,GAEPrC,MAAK,SAAAuC,GAClB,OAAIA,EAASC,GACGD,EAASrC,OAEVwC,MAAK,SAACC,EAAGC,GACpB,OAAOA,EAAEC,iBAAmBF,EAAEE,oBAI3B,OAxCTC,KAAKR,aAAeH,GCMjB,SAASY,EAAc5I,GAC5B,OACE,uBAAG6B,KAAM7B,EAAM6I,OAAOpJ,SAAU0H,MAAOnH,EAAM6I,OAAOtJ,OAClD,kBAACU,EAAA,EAAD,CACE+B,GAAG,MACHV,IAAKtB,EAAM6I,OAAOtJ,MAClB0H,QAAS,EACTzF,IAAKxB,EAAM6I,OAAOrJ,WAClBiC,MAAM,UAYP,SAASqH,EAAoB9I,GAClC,OACE,kBAACD,EAAD,CAAWiC,GAAInB,IAAM4B,eAAe,SAAStC,SAAS,OAAO4I,KAAK,QAChE,kBAAC,MAAD,CACExE,GAAIvE,EAAMgJ,QACVhH,GAAI,SAAA6G,GAAM,OACR,kBAAC5I,EAAA,EAAD,CAAKC,EAAG,GACN,kBAAC0I,EAAD,CAAeC,OAAQA,S,IC7BdI,E,YACnB,WAAYjJ,GAAQ,IAAD,8BACjB,4CAAMA,KAkBRkJ,OAAS,WACP,OAAO,kBAACJ,EAAD,CAAqBE,QAAS,EAAKG,MAAMH,WAlBhD,EAAKG,MAAQ,CAACH,QAAS,GAAII,SAAS,EAAMC,OAAO,GAFhC,E,iFAKE,IAAD,OAEN,IAAItB,EAAUY,KAAK3I,MAAMsJ,SAElCrB,gBACApC,MAAK,SAAAmD,GACJ,EAAKO,SAAS,CAACP,UAASI,SAAS,OAElCI,OAAM,SAAAH,GACLI,QAAQJ,MAAMA,GACd,EAAKE,SAAS,CAACF,OAAO,W,GAhBiBK,IAAMC,W,QCNtC,SAASC,GAAS5J,GAC/B,OACE,kBAACC,EAAA,EAAD,CAAK+G,GAAG,QAAQC,QAAS,EAAGtF,EAAG,GAC7B,kBAACI,EAAA,EAAD,CAASC,GAAG,KAAKK,KAAK,MACpB,kBAACpC,EAAA,EAAD,CACE+B,GAAG,IACHC,MAAM,UACNJ,KAAI,0CAAqC7B,EAAM8B,KAE9C9B,EAAMuB,OAIX,kBAACtB,EAAA,EAAD,CAAKgC,MAAM,YACT,kBAACpB,EAAA,EAAD,CAAM4F,MAAM,SAAS9D,GAAI,EAAGW,cAAc,cACxC,kBAACH,EAAA,EAAD,CAAM5B,KAAK,eAAe6B,GAAI,IAC7BG,YAAOC,YAASxD,EAAMyD,YAAa,YAAa,CAACC,OAAQC,OAE5D,kBAAC9C,EAAA,EAAD,CAAM4F,MAAM,SAAS9D,GAAI,GACvB,kBAACQ,EAAA,EAAD,CAAM5B,KAAK,QAAQ6B,GAAI,IACtBG,YAAOC,YAASxD,EAAMyD,YAAa,WAFtC,KAEoD,IACjDF,YAAOC,YAASxD,EAAM6D,UAAW,cClB7B,SAASgG,KACtB,OACE,kBAAC5J,EAAA,EAAD,CAAK+G,GAAG,yBACN,kBAACjH,EAAD,KACE,kBAACgC,EAAA,EAAD,CAASE,MAAM,QAAQI,KAAK,MAA5B,WAIA,kBAAC+B,EAAA,EAAD,CACEC,IAAK,EACL1B,GAAI,EACJ2B,gBAAgB,yCAEhB,kBAAC,MAAD,CAAKC,GAAIuF,EAAO9H,GAAI,SAAA+H,GAAI,OAAI,kBAACH,GAAaG,SCTpD,IAAMC,GAAW,eACZC,IADY,CAEfC,MAAOC,IAoBMC,OAjBf,WACE,OACE,kBAACC,EAAA,EAAD,CAAeJ,MAAOD,IACpB,kBAACM,EAAA,EAAD,MACA,kBAAC7C,EAAD,MACA,kBAACG,EAAD,MACA,kBAAC3H,EAAA,EAAD,CAAK+G,GAAG,WACN,kBAAC,EAAD,CAAmBsC,QAAQ,UAC3B,kBAACpE,EAAD,OAEF,kBAAC2E,GAAD,MACA,kBAAC/F,EAAD,MACA,kBAAC,EAAD,QCjBcyG,QACW,cAA7BC,OAAO9J,SAAS+J,UAEe,UAA7BD,OAAO9J,SAAS+J,UAEhBD,OAAO9J,SAAS+J,SAASC,MACvB,2DCZN,IAAMC,GAAcC,SAASC,eAAe,QAExCF,GAAYG,gBACdC,IAASC,QAAQ,kBAAC,GAAD,MAASL,IAE1BI,IAAS7B,OAAO,kBAAC,GAAD,MAASyB,IDkHrB,kBAAmBxJ,WACrBA,UAAU8J,cAAcC,MAAMrF,MAAK,SAAAsF,GACjCA,EAAaC,kB","file":"static/js/main.19ec2762.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/event.ec859341.jpg\";","module.exports = __webpack_public_path__ + \"static/media/computer.e3baf278.jpg\";","/**\n * This file is used as a fallback data on an API request failure.\n */\n\nexport const KNOWN_MEMBERS = [\n  {\n    login: 'LaurenceM10',\n    avatar_url: 'https://avatars1.githubusercontent.com/u/13529689?v=4',\n    html_url: 'https://github.com/LaurenceM10',\n  },\n  {\n    login: 'amosrivera',\n    avatar_url: 'https://avatars1.githubusercontent.com/u/548232?v=4',\n    html_url: 'https://github.com/amosrivera',\n  },\n  {\n    login: 'christopher-ramirez',\n    avatar_url: 'https://avatars1.githubusercontent.com/u/1440398?v=4',\n    html_url: 'https://github.com/christopher-ramirez',\n  },\n  {\n    login: 'hosmelq',\n    avatar_url: 'https://avatars2.githubusercontent.com/u/1166143?v=4',\n    html_url: 'https://github.com/hosmelq',\n  },\n  {\n    login: 'jarbitlira',\n    avatar_url: 'https://avatars1.githubusercontent.com/u/3398354?v=4',\n    html_url: 'https://github.com/jarbitlira',\n  },\n  {\n    login: 'jenniercruz',\n    avatar_url: 'https://avatars1.githubusercontent.com/u/25697290?v=4',\n    html_url: 'https://github.com/jenniercruz',\n  },\n  {\n    login: 'juanpicado',\n    avatar_url: 'https://avatars0.githubusercontent.com/u/558752?v=4',\n    html_url: 'https://github.com/juanpicado',\n  },\n  {\n    login: 'leftdevel',\n    avatar_url: 'https://avatars3.githubusercontent.com/u/843337?v=4',\n    html_url: 'https://github.com/leftdevel',\n  },\n  {\n    login: 'oscarmcm',\n    avatar_url: 'https://avatars3.githubusercontent.com/u/2553459?v=4',\n    html_url: 'https://github.com/oscarmcm',\n  },\n  {\n    login: 'paulomcnally',\n    avatar_url: 'https://avatars2.githubusercontent.com/u/181533?v=4',\n    html_url: 'https://github.com/paulomcnally',\n  },\n];\n","import React from 'react';\n\nexport default {\n  'calendar-alt': {\n    viewBox: '0 0 448 512',\n    path: (\n      <path\n        fill=\"currentColor\"\n        d=\"M148 288h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm108-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 96v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96-260v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48zm-48 346V160H48v298c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"\n      />\n    ),\n  },\n  clock: {\n    viewBox: '0 0 512 512',\n    path: (\n      <path\n        fill=\"currentColor\"\n        d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z\"\n      />\n    ),\n  },\n  'map-marker-alt': {\n    viewBox: '0 0 384 512',\n    path: (\n      <path\n        fill=\"currentColor\"\n        d=\"M192 0C85.903 0 0 86.014 0 192c0 71.117 23.991 93.341 151.271 297.424 18.785 30.119 62.694 30.083 81.457 0C360.075 285.234 384 263.103 384 192 384 85.903 297.986 0 192 0zm0 464C64.576 259.686 48 246.788 48 192c0-79.529 64.471-144 144-144s144 64.471 144 144c0 54.553-15.166 65.425-144 272zm-80-272c0-44.183 35.817-80 80-80s80 35.817 80 80-35.817 80-80 80-80-35.817-80-80z\"\n      />\n    ),\n  },\n};\n","import React from 'react';\nimport {Box} from '@chakra-ui/core';\n\nexport default function Container(props) {\n  return (\n    <Box m=\"0 auto\" maxWidth={948} px={[3, 4, 4, 0]} py={[4, 8]} {...props} />\n  );\n}\n","import {format, parseISO} from 'date-fns';\nimport esLocale from 'date-fns/locale/es';\nimport React from 'react';\nimport {\n  Badge,\n  Box,\n  Button,\n  Flex,\n  Heading,\n  Icon,\n  Image,\n  Link,\n  Text,\n} from '@chakra-ui/core';\n\nfunction buildStaticMapUrl(lat, lng) {\n  return `https://maps.googleapis.com/maps/api/staticmap?center=${lat},${lng}&zoom=16&size=580x300&markers=color:red%7Clabel:%7C12.136062922753,-86.266359686852&key=AIzaSyC5YSkpeBuJyiBp0BnkWBW6Es3CQPymD84`;\n}\n\nexport default function EventCard(props) {\n  let {place} = props;\n  let {location} = place;\n  let {latitude, longitude} = location;\n\n  return (\n    <Flex\n      backgroundColor=\"white\"\n      borderRadius=\"md\"\n      direction=\"column\"\n      overflow=\"hidden\"\n      shadow=\"md\"\n    >\n      {process.env.NODE_ENV === 'production' &&\n        navigator.userAgent !== 'ReactSnap' && (\n          <Image\n            alt={props.name}\n            src={buildStaticMapUrl(latitude, longitude)}\n            width=\"100%\"\n          />\n        )}\n      <Flex direction=\"column\" flex={1} p={4}>\n        <Link href={`https://www.facebook.com/events/${props.id}`}>\n          <Heading\n            as=\"h2\"\n            color=\"gray.900\"\n            fontWeight=\"bold\"\n            fontFamily=\"heading\"\n            lineHeight=\"shorter\"\n            size=\"lg\"\n          >\n            {props.name}\n          </Heading>\n        </Link>\n        <Flex\n          alignItems=\"center\"\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"space-between\"\n          mb={8}\n          mt={1}\n        >\n          <Text color=\"gray.700\">\n            {place.name}, {location.city}\n          </Text>\n          <Button\n            as=\"a\"\n            href={`https://www.google.com/maps/@${latitude},${longitude},17z`}\n            ml={2}\n            opacity={1}\n            size=\"xs\"\n            variant=\"solid\"\n            variantColor=\"cyan\"\n          >\n            <Icon name=\"map-marker-alt\" mr={1} />\n            Mapa\n          </Button>\n        </Flex>\n        <Flex\n          alignItems=\"center\"\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"space-between\"\n          mt=\"auto\"\n        >\n          <Box>\n            <Text fontSize=\"sm\">Fecha</Text>\n            <Text\n              fontSize=\"xs\"\n              fontWeight=\"bold\"\n              mt={1}\n              textTransform=\"capitalize\"\n            >\n              {format(parseISO(props.start_time), 'MMMM d, y', {\n                locale: esLocale,\n              })}\n            </Text>\n          </Box>\n          <Box>\n            <Text fontSize=\"sm\">Hora</Text>\n            <Badge variant=\"subtle\" variantColor=\"green\">\n              {format(parseISO(props.start_time), 'hh:mm a')} -{' '}\n              {format(parseISO(props.end_time), 'hh:mm a')}\n            </Badge>\n          </Box>\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}\n","import React from 'react';\nimport {For} from 'react-loops';\nimport {Box, Grid, Heading} from '@chakra-ui/core';\n\nimport bgImage from './event.jpg';\nimport events from './events.json';\nimport Container from 'components/Container';\nimport EventCard from 'components/EventCard';\n\nexport default function Events() {\n  return (\n    <Box\n      backgroundAttachment=\"fixed\"\n      backgroundImage={`linear-gradient(rgba(44, 62, 80, 0.9), rgba(44, 62, 80, 0.9)), url(${bgImage})`}\n      backgroundRepeat=\"no-repeat\"\n      backgroundSize=\"cover\"\n    >\n      <Container>\n        <Heading color=\"white\" size=\"lg\">\n          Eventos\n        </Heading>\n\n        <Grid\n          gap={4}\n          mt={4}\n          templateColumns=\"repeat(auto-fill, minmax(280px, 1fr))\"\n        >\n          <For of={events} as={event => <EventCard {...event} />} />\n        </Grid>\n      </Container>\n    </Box>\n  );\n}\n","import {useState, useEffect} from 'react';\n\nconst RSS2Json_ENDPOINT = 'https://api.rss2json.com/v1/api.json';\n\n/**\n * Transform a HTML content into plain text.\n *\n * @param {String} htmlSource HTML Content to transform\n * @returns {String} Plain text representation of htmlSource\n */\nconst htmlToText = function htmlToText(htmlSource) {\n  const doc = new DOMParser().parseFromString(htmlSource, 'text/html');\n  let plain = doc.body.textContent || '';\n\n  // Remove URLs leaved by DOMParser\n  plain = plain.replace(/https?:\\/\\/.*?\\/[a-z0-9/#:?&_-]*/g, '');\n  return plain;\n};\n\n/**\n Effect to retrieve a RSS feed as an array of objects.\n Each object correspond to a publication present in the feed.\n\n The RSS is transformed to a JSON response using the rss2json.com service\n */\nexport const usePosts = function usePosts(RSSUrl) {\n  const [loading, setLoading] = useState(true);\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const requestUrl = `${RSS2Json_ENDPOINT}?rss_url=${encodeURIComponent(\n      RSSUrl\n    )}`;\n\n    fetch(requestUrl)\n      .then(r => r.json())\n      .then(data => {\n        // The posts are stored in the 'items' array.\n        // Each post has post content and description as HTML source.\n        // This function has to provide a representation of these\n        // values into their plain text conterpart.\n        const posts = data.items.map(({content, description, ...rest}) => {\n          return {\n            contentPlain: htmlToText(content),\n            descriptionPlain: htmlToText(description),\n            content,\n            description,\n            ...rest,\n          };\n        });\n\n        setPosts(posts);\n        setLoading(false);\n      });\n  }, [RSSUrl]);\n\n  return [loading, posts];\n};\n","import {formatDistanceToNow, parseISO} from 'date-fns';\nimport esLocale from 'date-fns/locale/es';\nimport React from 'react';\nimport {For} from 'react-loops';\nimport {Box, Flex, Heading, Text} from '@chakra-ui/core';\n\nimport {usePosts} from './effects';\nimport Container from 'components/Container';\n\nconst JSNIC_MEDIUM_RSS_FEED = 'https://medium.com/feed/javascript-nicaragua';\n\nexport default function Feed() {\n  const [loading, posts] = usePosts(JSNIC_MEDIUM_RSS_FEED);\n\n  return (\n    <Container>\n      <Flex align=\"flex-end\" justify=\"space-between\">\n        <Heading fontWeight=\"normal\" size=\"lg\">\n          Blog\n        </Heading>\n        <Text as=\"a\" href=\"https://medium.com/javascript-nicaragua\">\n          Ver más artículos\n        </Text>\n      </Flex>\n\n      {loading ? (\n        <Text mt={4}>Cargando publicaciones...</Text>\n      ) : (\n        <For of={posts} as={post => <Article post={post} mt={3} />} />\n      )}\n    </Container>\n  );\n}\n\nfunction Article({post, ...props}) {\n  const parsedDate = formatDistanceToNow(parseISO(post.pubDate), {\n    locale: esLocale,\n  });\n\n  return (\n    <Box {...props} as=\"article\" bg=\"white\" rounded={4} p={4} shadow=\"md\">\n      <Text as=\"a\" href={post.guid}>\n        <Heading as=\"h3\" fontWeight=\"normal\" size=\"lg\">\n          {post.title}\n        </Heading>\n      </Text>\n      <Text as=\"time\" color=\"#aaa\">\n        {parsedDate}\n      </Text>\n      <Text color=\"#888\" mt={4}>\n        {post.descriptionPlain.split('.').slice(0, 1)}\n      </Text>\n    </Box>\n  );\n}\n","import React from 'react';\nimport {Flex, Text} from '@chakra-ui/core';\n\nfunction Footer() {\n  return (\n    <Flex align=\"center\" bg=\"#273531\" justify=\"space-between\" p={4}>\n      <Text color=\"#6d7d79\">\n        Comunidad de desarrolladores JavaScript de Nicaragua\n      </Text>\n      <a\n        href=\"http://js.org\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n        title=\"JS.ORG | JavaScript Community\"\n      >\n        <img\n          alt=\"JS.ORG Logo\"\n          src=\"https://logo.js.org/bright_horz.png\"\n          width=\"102\"\n        />\n      </a>\n    </Flex>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport {Box, Heading} from '@chakra-ui/core';\n\nexport default function Header() {\n  return (\n    <Box bg=\"#f7df1f\" py={4}>\n      <Heading\n        as=\"h1\"\n        color=\"gray.700\"\n        children=\"Comunidad JavaScript de Nicaragua\"\n        fontWeight=\"normal\"\n        textAlign=\"center\"\n      />\n    </Box>\n  );\n}\n","import React from 'react';\nimport {Box, Flex, Heading, Text} from '@chakra-ui/core';\n\nimport bgImage from './computer.jpg';\n\nexport default function Welcome() {\n  return (\n    <Flex\n      backgroundAttachment=\"fixed\"\n      backgroundImage={`linear-gradient(rgba(44, 62, 80, 0.9), rgba(44, 62, 80, 0.9)), url(${bgImage})`}\n      backgroundRepeat=\"no-repeat\"\n      backgroundSize=\"cover\"\n      justify=\"center\"\n      px={4}\n      py={[4, 8]}\n    >\n      <Box color=\"white\" maxWidth={600} textAlign=\"center\">\n        <Heading size=\"lg\">¿Quiénes somos?</Heading>\n        <Text lineHeight={1.5} mt={4}>\n          Somos un grupo de desarrolladores que nos reunimos para hablar acerca\n          de librerías, frameworks y todo lo relacionado a JavaScript.\n        </Text>\n        <Text lineHeight={1.5} mt={3}>\n          Nos reunimos para socializar y comer pizza, compartimos conocimientos\n          mediante charlas presenciales o vía hangouts. Creamos capital social\n          para tener nuevas oportunidades de empleo.\n        </Text>\n      </Box>\n    </Flex>\n  );\n}\n","const cache = require('./cache');\n\n/**\n * Provides methods to access public data of a Github organization\n */\nexport default class GithubOrg {\n  constructor(organizationName) {\n    this.organization = organizationName;\n  }\n\n  /**\n   * Returns a promise which resolves in an array of org public members\n   */\n  publicMembers = () => {\n    const API_ENDPOINT = `https://api.github.com/orgs/${\n      this.organization\n    }/public_members`;\n    const request = fetch(API_ENDPOINT);\n\n    return request.then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      return cache.KNOWN_MEMBERS;\n    });\n  };\n\n  /**\n   * Returns a promise which resolves in an array of org public repositories.\n   * The array is sorted by the number of repository stargazers\n   */\n  publicRepos = () => {\n    const API_ENDPOINT = `https://api.github.com/orgs/${\n      this.organization\n    }/repos`;\n    const request = fetch(API_ENDPOINT);\n\n    return request.then(response => {\n      if (response.ok) {\n        const repos = response.json();\n\n        return repos.sort((a, b) => {\n          return b.stargazers_count - a.stargazers_count;\n        });\n      }\n\n      return [];\n    });\n  };\n}\n","import React from 'react';\nimport {For} from 'react-loops';\nimport {Box, Flex} from '@chakra-ui/core';\n\nimport Container from 'components/Container';\n\n/**\n * Element that displays a Github profile card. For now it only displays\n * the member profile picture with a link to member profile.\n *\n * Props required:\n * - member: A dictionay of a Github profile that has at least the avatar and username\n */\nexport function MemberProfile(props) {\n  return (\n    <a href={props.member.html_url} title={props.member.login}>\n      <Box\n        as=\"img\"\n        alt={props.member.login}\n        rounded={4}\n        src={props.member.avatar_url}\n        width=\"64px\"\n      />\n    </a>\n  );\n}\n\n/**\n * Displays a list of github profiles. Each profile is displayed in a MemberProfile element\n *\n * Props required:\n * - members: An array of github dictinaries profiles\n */\nexport function OrganizationMembers(props) {\n  return (\n    <Container as={Flex} justifyContent=\"center\" maxWidth=\"100%\" wrap=\"wrap\">\n      <For\n        of={props.members}\n        as={member => (\n          <Box m={2}>\n            <MemberProfile member={member} />\n          </Box>\n        )}\n      />\n    </Container>\n  );\n}\n","import React from 'react';\nimport GithubOrg from './GithubOrg';\nimport {OrganizationMembers} from './view';\n\n/**\n * Displays a list of public members of a Github organization.\n * This class handles the backend retrieval of the members list.\n *\n * Props required:\n * - orgName: Name of the organization whose members are to be displayed\n */\nexport default class OrgMembersDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {members: [], pending: true, error: false};\n  }\n\n  componentDidMount() {\n    // Load the organization members\n    const org = new GithubOrg(this.props.orgName);\n    org\n      .publicMembers()\n      .then(members => {\n        this.setState({members, pending: false});\n      })\n      .catch(error => {\n        console.error(error);\n        this.setState({error: true});\n      });\n  }\n\n  render = () => {\n    return <OrganizationMembers members={this.state.members} />;\n  };\n}\n","import {format, parseISO} from 'date-fns';\nimport esLocale from 'date-fns/locale/es';\nimport React from 'react';\nimport {Box, Flex, Heading, Icon} from '@chakra-ui/core';\n\nexport default function TalkCard(props) {\n  return (\n    <Box bg=\"white\" rounded={4} p={4}>\n      <Heading as=\"h3\" size=\"md\">\n        <Box\n          as=\"a\"\n          color=\"#4183c4\"\n          href={`https://www.facebook.com/events/${props.id}`}\n        >\n          {props.name}\n        </Box>\n      </Heading>\n\n      <Box color=\"gray.600\">\n        <Flex align=\"center\" mt={4} textTransform=\"capitalize\">\n          <Icon name=\"calendar-alt\" mr={1} />\n          {format(parseISO(props.start_time), 'MMMM d, y', {locale: esLocale})}\n        </Flex>\n        <Flex align=\"center\" mt={1}>\n          <Icon name=\"clock\" mr={1} />\n          {format(parseISO(props.start_time), 'hh:mm a')} -{' '}\n          {format(parseISO(props.end_time), 'hh:mm a')}\n        </Flex>\n      </Box>\n    </Box>\n  );\n}\n","import React from 'react';\nimport {For} from 'react-loops';\nimport {Box, Grid, Heading} from '@chakra-ui/core';\n\nimport talks from './talks.json';\nimport Container from 'components/Container';\nimport TalkCard from 'components/TalkCard';\n\nexport default function Talks() {\n  return (\n    <Box bg=\"rgba(44, 62, 80, 0.9)\">\n      <Container>\n        <Heading color=\"white\" size=\"lg\">\n          Charlas\n        </Heading>\n\n        <Grid\n          gap={4}\n          mt={4}\n          templateColumns=\"repeat(auto-fill, minmax(280px, 1fr))\"\n        >\n          <For of={talks} as={talk => <TalkCard {...talk} />} />\n        </Grid>\n      </Container>\n    </Box>\n  );\n}\n","import React from 'react';\nimport {Box, CSSReset, theme, ThemeProvider} from '@chakra-ui/core';\n\nimport customIcons from 'customIcons';\nimport Events from './components/Events';\nimport Feed from './components/Feed';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Welcome from './components/Welcome';\nimport OrgMembersDisplay from './components/Members';\nimport Talks from './components/Talks';\n\nconst customTheme = {\n  ...theme,\n  icons: customIcons,\n};\n\nfunction App() {\n  return (\n    <ThemeProvider theme={customTheme}>\n      <CSSReset />\n      <Header />\n      <Welcome />\n      <Box bg=\"#eff1f5\">\n        <OrgMembersDisplay orgName=\"js-ni\" />\n        <Feed />\n      </Box>\n      <Talks />\n      <Events />\n      <Footer />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootElement = document.getElementById('root');\n\nif (rootElement.hasChildNodes()) {\n  ReactDOM.hydrate(<App />, rootElement);\n} else {\n  ReactDOM.render(<App />, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}